plugins{
    id 'java'
    id 'application'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
    options.compilerArgs << "-Xlint:unchecked"
}

// Compile with all options of JDK 21.
compileJava {
    options.release = 21
}

group = 'br.com.spedison'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.5.0'

    implementation 'org.apache.pdfbox:pdfbox:2.0.29'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation 'org.slf4j:jul-to-slf4j:2.0.9'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.11'

    implementation 'org.hibernate.orm:hibernate-core:6.6.1.Final'
    implementation 'org.hibernate.common:hibernate-commons-annotations:6.0.6.Final'
    implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'
    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'com.github.javafaker:javafaker:1.0.2'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
}

test {
    useJUnitPlatform()
}

application {
    mainClass.set("br.com.spedison.Main")  // No Kotlin, o setter usa a fun��o set()
}

def libsDir = file(layout.buildDirectory.file("libs"))
tasks.register('copyDependencies', Copy) {
    dependsOn(build)
    from configurations.runtimeClasspath
    into libsDir
}

jar {

    from sourceSets.main.output

    manifest {
        attributes(
                'Main-Class': application.mainClass,  // Substitua pelo nome completo da sua classe principal
                'Class-Path': configurations.runtimeClasspath.files.collect { it.name }.join(' ')
        )
    }
    // Para fazer um FAT Jar.
    //from {
    //    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    // }
}

tasks.register("defaultTask"){
    dependsOn clean, copyDependencies
}

defaultTasks "defaultTask"
